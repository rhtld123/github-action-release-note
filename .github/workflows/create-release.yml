name: Generate Tag & Create Pull Request
on:
  workflow_dispatch:
    inputs:
      increaseVersion:
        description: '버전업 할 버전종류를 입력해주세요.'
        required: true
        default: 'minor'
        type: choice
        options:
          - major
          - minor
          - patch
      mergeBranch:
        description: 배포할 Feature Branch를 입력해주세요.
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: '이전 Tag 버전 조회'
        id: previoustag
        run: |
          LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1) --abbrev=0) || echo "0.0.0"
          echo "::set-output name=tag::$LATEST_TAG"
      - name: '배포 버전 생성'
        id: currentVersion
        run: |
          IFS='.' read -ra array <<< ${{steps.previoustag.outputs.tag}}
          if [[ "${{ github.event.inputs.increaseVersion }}" == "major" ]]; then
            array[0]=$((array[0] + 1))
          elif [[ "${{ github.event.inputs.increaseVersion }}" == "minor" ]]; then
            array[1]=$((array[1] + 1))
          elif [[ "${{ github.event.inputs.increaseVersion }}" == "patch" ]]; then
            array[2]=$((array[2] + 1))
          else
          echo "Invalid version option selected"
          fi
          
          echo "::set-output name=version::${array[0]}.${array[1]}.${array[2]}"

      - name: Setup Git configuration
        run: |
          git config --local user.email "rhtld123@gmail.com"
          git config --local user.name "rhtld123"

      - name: Release Branch 생성
        run: |
          git checkout master
          git pull
          git fetch origin
          
          IFS=',' read -ra branches <<< "${{ github.event.inputs.mergeBranch }}"

          for branch in "${branches[@]}"; do
            git checkout -b release/${{steps.currentVersion.outputs.version}}
            git merge --no-ff "$branch"
            git push origin release/${{steps.currentVersion.outputs.version}}
          done
          
          git push origin release/${{steps.currentVersion.outputs.version}}


      - name: Create PR
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        run: |
          gh pr create --base master --head release/${{steps.currentVersion.outputs.version}} --title "v${{steps.currentVersion.outputs.version}} 배포" --body ""
